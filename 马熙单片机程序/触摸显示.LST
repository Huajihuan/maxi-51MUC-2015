C51 COMPILER V9.01   触摸显示                                                              02/08/2015 01:23:32 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE 触摸显示
OBJECT MODULE PLACED IN 触摸显示.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE 触摸显示.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"touch.h"
   2          
   3          void TOUCH_SPI_Start(void)
   4          {
   5   1              TOUCH_CLK = 0;
   6   1              TOUCH_CS  = 1;
   7   1              TOUCH_DIN = 1;
   8   1              TOUCH_CLK = 1;
   9   1              TOUCH_CS  = 0;          
  10   1      }
  11          
  12          void TOUCH_SPI_Write(uchar dat)
  13          {
  14   1              uchar i;
  15   1              TOUCH_CLK = 0;
  16   1              for(i=0; i<8; i++)
  17   1              {
  18   2                      TOUCH_DIN = dat >>7;    //放置最高位
  19   2                      dat <<= 1;
  20   2                      TOUCH_CLK = 0;                  //上升沿放置数据
  21   2      
  22   2                      TOUCH_CLK = 1;
  23   2      
  24   2              }
  25   1      }
  26          
  27          uint TOUCH_SPI_Read(void)
  28          {
  29   1              uint i, dat=0;
  30   1              TOUCH_CLK = 0;
  31   1              for(i=0; i<12; i++)             //接收12位数据
  32   1              {
  33   2                      dat <<= 1;
  34   2      
  35   2                      TOUCH_CLK = 1;
  36   2                      TOUCH_CLK = 0;
  37   2      
  38   2                      dat |= TOUCH_DOUT;
  39   2      
  40   2              }
  41   1              return dat;     
  42   1      }
  43          
  44          #define XY_READ_TIMS  10                   //读取的次数
  45          
  46          uint TOUCH_XPT_ReadData(uchar cmd)
  47          {
  48   1              uchar i, j;
  49   1              uint readValue[XY_READ_TIMS];
  50   1              long endValue;
  51   1      
  52   1              TOUCH_CLK = 0;    //先拉低时间
  53   1              TOUCH_CS  = 0;    //选中芯片
  54   1              
  55   1              for(i=0; i<XY_READ_TIMS; i++)           //读取XY_READ_TIMS次结果
C51 COMPILER V9.01   触摸显示                                                              02/08/2015 01:23:32 PAGE 2   

  56   1              {       
  57   2                      TOUCH_SPI_Write(cmd);  //发送转换命令
  58   2                      //Delay_6us();
  59   2                      for(j=6; j>0; j--);     //延时等待转换结果
  60   2                      TOUCH_CLK = 1;    //发送一个时钟周期，清除BUSY
  61   2                      _nop_();
  62   2                      _nop_();
  63   2                      TOUCH_CLK = 0;
  64   2                      _nop_();
  65   2                      _nop_();
  66   2              
  67   2                      readValue[i] = TOUCH_SPI_Read();
  68   2              }
  69   1              TOUCH_CS = 1; //释放片选
  70   1      
  71   1              //---软件滤波---//
  72   1              //---先大到小排序，除去最高值，除去最低值，求其平均值---//
  73   1              for(i=0; i<XY_READ_TIMS - 1; i++)       //从大到小排序
  74   1              {
  75   2                      for(j= i+1; j<XY_READ_TIMS; j++)
  76   2                      {
  77   3                              if(readValue[i] < readValue[j])
  78   3                              {
  79   4                                      endValue = readValue[i];
  80   4                                      readValue[i] = readValue[j];
  81   4                                      readValue[j] = endValue;
  82   4                              }  
  83   3                      }
  84   2              }
  85   1      //      if((readValue[2] - readValue[3]) > 5)
  86   1      //      {
  87   1      //              return 0;
  88   1      //      }
  89   1              endValue = 0;
  90   1              for(i=2; i<XY_READ_TIMS-2; i++)            
  91   1              {
  92   2                      endValue += readValue[i]; 
  93   2              }
  94   1              endValue = endValue/ (XY_READ_TIMS - 4);//求平均值
  95   1      
  96   1              return endValue;
  97   1      }
  98          
  99          
 100          XPT_XY xpt_xy;   //定义一个全局变量保存X、Y的值
 101          uchar TOUCH_XPT_ReadXY(void)
 102          {       
 103   1              uint x1, x2, x, y1, y2, y;
 104   1      
 105   1              TOUCH_SPI_Start();
 106   1              //---分别读两次X值和Y值, 交叉着读可以提高一些读取精度---//
 107   1              x1 = TOUCH_XPT_ReadData(XPT_CMD_X);
 108   1              y1 = TOUCH_XPT_ReadData(XPT_CMD_Y);
 109   1              x2 = TOUCH_XPT_ReadData(XPT_CMD_X);
 110   1              y2 = TOUCH_XPT_ReadData(XPT_CMD_Y);
 111   1      
 112   1              //---求取X值的差值---//
 113   1              if (x1 > x2)
 114   1              {
 115   2                      x = x1 - x2;
 116   2              }
 117   1              else
C51 COMPILER V9.01   触摸显示                                                              02/08/2015 01:23:32 PAGE 3   

 118   1              {
 119   2                      x = x2 - x1;
 120   2              }
 121   1      
 122   1              //---求取Y值的差值---//
 123   1              if (y1 > y2)
 124   1              {
 125   2                      y = y1 - y2;
 126   2              }
 127   1              else
 128   1              {
 129   2                      y = y2 - y1;
 130   2              }
 131   1      
 132   1              //---判断差值是否大于50，大于就返回0，表示读取失败---//
 133   1              if((x > 50) || (y > 50))  
 134   1              {
 135   2                      return 0;
 136   2              }
 137   1      
 138   1              //---求取两次读取值的平均数作为读取到的XY值---//
 139   1              xpt_xy.x = (x1 + x2) / 2;
 140   1              xpt_xy.y = (y1 + y2) / 2;
 141   1      
 142   1              xpt_xy.x &= 0xFFF0;     //去掉低四位
 143   1              xpt_xy.y &= 0xFFF0;
 144   1               
 145   1              //---确定XY值的范围，用在触摸屏大于TFT时---//
 146   1              if((xpt_xy.x < 100) || (xpt_xy.y > 3800))
 147   1              {
 148   2                      return 0;
 149   2              }
 150   1      
 151   1              return 1;  // 返回1，表示读取成功
 152   1      }
 153          
 154          
 155          
 156          #include<reg51.h>
 157          #include"gui.h"
 158          #include"touch.h"
 159          
 160          void main(void)
 161          {
 162   1              uchar rst = 0;
 163   1              //--多出来两个值使用来在内存上面跟别的变量分隔的--//
 164   1              uchar  xValue[6] = {0, 0, 0, 0, 0, 0}, yValue[6] = {0, 0, 0, 0, 0, 0};
 165   1              long x, y;
 166   1      
 167   1              TFT_Init();
 168   1              rst = 1;
 169   1      
 170   1              while(1)
 171   1              {
 172   2                      if(rst == 1)
 173   2                      {       
 174   3                              TFT_ClearScreen(0x0000);
 175   3                              GUI_Write32CnChar(20, 24, "普中科技", 0xF800, 0x0000);
 176   3                              GUI_Line(20, 54, 140, 54, 0xF800);
 177   3                              GUI_Line(20, 54, 140, 54, 0xF800);
 178   3                              GUI_WriteASCII(127, 0, "RST", 0xF800, 0x0000);
 179   3                              rst = 0;
C51 COMPILER V9.01   触摸显示                                                              02/08/2015 01:23:32 PAGE 4   

 180   3                      }
 181   2      
 182   2                      if(TOUCH_XPT_ReadXY() == 1)
 183   2                      {
 184   3                              //--如果触摸跟显示发生偏移，可以根据显示AD值--//
 185   3                              //--调整下面公式里面的数值--//
 186   3                              x = xpt_xy.x;
 187   3                              x = (x - 100) * 454 / 10000 ; 
 188   3                              y =     xpt_xy.y;
 189   3                              y = (y - 240) * 628 / 10000;
 190   3      
 191   3                              if (x > 175 )
 192   3                              {
 193   4                                      x = 175;
 194   4                              }
 195   3                              if (y > 219)
 196   3                              {
 197   4                                      y = 219;
 198   4                              }
 199   3                              if ((x > 127) && (y < 24))
 200   3                              {
 201   4                                      rst = 1;
 202   4                              }
 203   3                              else
 204   3                              {
 205   4                                      GUI_Dot((uint)x , (uint)y, 0x001F);
 206   4                              }
 207   3                      }
 208   2              }
 209   1      }
 210          #include"gui.h"
 211          
 212          //---汉字的字库头文件---//
 213          #include"charcode.h"
 214          
 215          //---如果要显示图片就添加这个头文件---//
 216          #ifdef PICTURE_SHOW
              
              #include"picture.h"
              
              #endif
 221          
 222          /****************************************************************************
 223          *函数名：GUI_Dot
 224          *输  入：x：点的X坐标；
 225          *      * y：点的Y坐标
 226          *      * color：点的颜色
 227          *输  出：
 228          *功  能：给单个像素涂上颜色。
 229          ****************************************************************************/     
 230          
 231          void GUI_Dot(uint x, uint y, uint color)
 232          {  
 233   1              uchar i;
 234   1      
 235   1              TFT_SetWindow(x-1, y, x+2, y+2);  //单个像素
 236   1      
 237   1              for(i=0; i<16; i++)
 238   1              {
 239   2                      TFT_WriteData(color);
 240   2              }
 241   1      }
C51 COMPILER V9.01   触摸显示                                                              02/08/2015 01:23:32 PAGE 5   

 242          
 243          ///****************************************************************************
 244          //*函数名：GUI_Box
 245          //*输  入：sx：起始X坐标, sy：其实Y坐标, 
 246          //*      * ex：终止X坐标, ey：终止Y坐标,
 247          //*      * color：方框的颜色
 248          //*输  出：
 249          //*功  能：给一个区域涂上颜色。
 250          //****************************************************************************/   
 251          //void GUI_Box(uint sx, uint sy, uchar ex, uint ey, uint color)
 252          //{ 
 253          //      uint temp;   
 254          //      TFT_SetWindow(sx, sy, ex, ey); 
 255          //  sx = ex - sx + 1;
 256          //      sy = ey - sy + 1;
 257          //      while (sx--)
 258          //      {
 259          //              temp = sy;
 260          //              while (temp--)
 261          //              {       
 262          //                      TFT_WriteData(color);
 263          //              }
 264          //      }
 265          //}
 266          
 267          /****************************************************************************
 268          *函数名：GUI_Line 
 269          *输  入：xStart：线的起始X坐标,
 270          *      * yStart：线的其实Y坐标,
 271          *      * xEnd：线的终止X坐标,
 272          *      * yEnd：线的终止Y坐标,
 273          *      * color：线条的颜色
 274          *输  出：
 275          *功  能：画一条直线
 276          ****************************************************************************/     
 277          
 278          void GUI_Line(uint xStart, uint yStart, uchar xEnd, uint yEnd, uint color)
 279          {
 280   1              uint t;  
 281   1              int xerr = 0, yerr = 0, delta_x, delta_y, distance;  
 282   1              int incx, incy;  
 283   1              uint row, col;  
 284   1              delta_x = xEnd - xStart;//计算坐标增量  
 285   1              delta_y = yEnd - yStart;  
 286   1              col = xStart;  
 287   1              row = yStart;  
 288   1              if (delta_x > 0)
 289   1              {
 290   2                      incx=1;//设置单步方向
 291   2              }         
 292   1              else    
 293   1              {  
 294   2                  if (delta_x == 0)
 295   2                      {
 296   3                              incx = 0;//垂直线 
 297   3                      }                
 298   2                  else 
 299   2                              {
 300   3                                      incx = -1;
 301   3                                      delta_x = -delta_x;
 302   3                              }  
 303   2              }  
C51 COMPILER V9.01   触摸显示                                                              02/08/2015 01:23:32 PAGE 6   

 304   1              if (delta_y > 0)
 305   1              {
 306   2                      incy = 1;
 307   2              }         
 308   1              else  
 309   1              {  
 310   2                  if (delta_y == 0)
 311   2                      {
 312   3                              incy = 0;//水平线  
 313   3                      } 
 314   2                  else 
 315   2                      {
 316   3                              incy = -1;
 317   3                              delta_y = -delta_y;
 318   3                      }  
 319   2              }  
 320   1              if (delta_x > delta_y)
 321   1              { 
 322   2                      distance = delta_x;//选取基本增量坐标轴  
 323   2              }
 324   1              else
 325   1              {
 326   2                      distance = delta_y; 
 327   2              }       
 328   1              for (t=0; t<=distance+1; t++)  
 329   1              {                                     //画线输出  
 330   2                  GUI_Dot(col, row, color);
 331   2                  xerr += delta_x;  
 332   2                  yerr += delta_y;  
 333   2                      if(xerr > distance)  
 334   2                  {  
 335   3                      xerr -= distance;  
 336   3                      col += incx;  
 337   3                  }  
 338   2                  if(yerr > distance)  
 339   2                  {  
 340   3                      yerr -= distance;  
 341   3                      row += incy;  
 342   3                  }  
 343   2              }  
 344   1      }
 345          
 346          /****************************************************************************
 347          *函数名：GUI_WriteCnChar 
 348          *输  入：x：显示起始X坐标
 349          *      * y：显示起始Y坐标
 350          *      * *cn：要显示的字符串
 351          *      * wordColor：字体的颜色
 352          *      * backColor：背景颜色
 353          *输  出：
 354          *功  能：写二号楷体汉字
 355          ****************************************************************************/     
 356          
 357          #ifdef CHAR32_SHOW
 358          
 359          void GUI_Write32CnChar(uint x, uint y, uchar *cn, uint wordColor, uint backColor)        
 360          {  
 361   1              uchar i, j, wordNum;
 362   1              uint color;
 363   1              while (*cn != '\0')
 364   1              {
 365   2                      TFT_SetWindow(x, y, x+31, y+28);
C51 COMPILER V9.01   触摸显示                                                              02/08/2015 01:23:32 PAGE 7   

 366   2                      for (wordNum=0; wordNum<20; wordNum++)
 367   2                      {       //wordNum扫描字库的字数
 368   3                              if ((CnChar32x29[wordNum].Index[0]==*cn)
 369   3                                   &&(CnChar32x29[wordNum].Index[1]==*(cn+1)))
 370   3                              {
 371   4                                      for(i=0; i<116; i++) 
 372   4                                      {       //MSK的位数
 373   5                                              color=CnChar32x29[wordNum].Msk[i];
 374   5                                              for(j=0;j<8;j++) 
 375   5                                              {
 376   6                                                      if((color&0x80)==0x80)
 377   6                                                      {
 378   7                                                              TFT_WriteData(wordColor);
 379   7                                                      }                                               
 380   6                                                      else
 381   6                                                      {
 382   7                                                              TFT_WriteData(backColor);
 383   7                                                      } 
 384   6                                                      color<<=1;
 385   6                                              }//for(j=0;j<8;j++)结束
 386   5                                      }    
 387   4                              }
 388   3                      } //for (wordNum=0; wordNum<20; wordNum++)结束  
 389   2                      cn += 2;
 390   2                      x += 32;
 391   2              }
 392   1      }
 393          #endif
 394          
 395          /****************************************************************************
 396          *函数名：GUI_WriteEnChar 
 397          *输  入：x：显示起始X坐标
 398          *      * y：显示起始Y坐标
 399          *      * *cn：要显示的字符串
 400          *      * wordColor：字体的颜色
 401          *      * backColor：背景颜色
 402          *输  出：
 403          *功  能：写四号字字母
 404          ****************************************************************************/     
 405          #ifdef CHAR14_SHOW
              
              void GUI_Write14CnChar(uint x,uint y,uchar *cn,uint wordColor,uint backColor)    
              {  
                      uchar i, j, wordNum;
                      uint color;
                      while (*cn != '\0')
                      {
                              TFT_SetWindow(x, y, x+23, y+18);
                              for (wordNum=0; wordNum<20; wordNum++)
                              {       //wordNum扫描字库的字数
                                      if ((CnChar19x24[wordNum].Index[0]==*cn)
                                           &&(CnChar19x24[wordNum].Index[1]==*(cn+1)))
                                      {
                                              for(i=0; i<57; i++) 
                                              {       //MSK的位数
                                                      color=CnChar19x24[wordNum].Msk[i];
                                                      for(j=0;j<8;j++) 
                                                      {
                                                              if((color&0x80)==0x80)
                                                              {
                                                                      TFT_WriteData(wordColor);
                                                              }                                               
C51 COMPILER V9.01   触摸显示                                                              02/08/2015 01:23:32 PAGE 8   

                                                              else
                                                              {
                                                                      TFT_WriteData(backColor);
                                                              } 
                                                              color<<=1;
                                                      }//for(j=0;j<8;j++)结束
                                              }    
                                      }
                              } //for (wordNum=0; wordNum<20; wordNum++)结束  
                              cn += 2;
                              x += 24;
                      }
              }
              
              #endif 
 443          /****************************************************************************
 444          *函数名：GUI_WriteASCII 
 445          *输  入：x：显示起始X坐标
 446          *      * y：显示起始Y坐标
 447          *      * *p：要显示的字符串
 448          *      * wordColor：字体的颜色
 449          *      * backColor：背景颜色
 450          *输  出：
 451          *功  能：写16X24的ASCII字符
 452          ****************************************************************************/     
 453          
 454          #ifdef USE_ASCII
 455          
 456          void GUI_WriteASCII(uint x, uint y, uchar *p, uint wordColor, uint backColor)
 457          {
 458   1              uchar j, wordByte,wordNum;
 459   1              uint color;
 460   1              while(*p != '\0')
 461   1              {
 462   2                      wordNum = *p - 32;
 463   2                      TFT_SetWindow(x,y,x+15, y+23);
 464   2                      for (wordByte=0; wordByte<48; wordByte++)
 465   2                      {
 466   3                              color = ASCII16x24[wordNum][wordByte];
 467   3                              for (j=0; j<8; j++) 
 468   3                              {
 469   4                                      if ((color&0x80) == 0x80)
 470   4                                      {
 471   5                                              TFT_WriteData(wordColor);
 472   5                                      }                                               
 473   4                                      else
 474   4                                      {
 475   5                                              TFT_WriteData(backColor);
 476   5                                      }       
 477   4                                      color <<= 1;
 478   4                              }
 479   3                      }
 480   2                      p++;
 481   2                      x +=16;
 482   2              }
 483   1      }
 484          #endif
 485          
 486          /****************************************************************************
 487          *函数名：GUI_ShowPicture 
 488          *输  入：x：显示起始X坐标
 489          *      * y：显示起始Y坐标
C51 COMPILER V9.01   触摸显示                                                              02/08/2015 01:23:32 PAGE 9   

 490          *      * wide：图片的宽度
 491          *      * high：图片的高度
 492          *输  出：
 493          *功  能：画一条直线
 494          ****************************************************************************/     
 495          #ifdef PICTURE_SHOW
              
              void GUI_ShowPicture(uint x, uint y, uchar wide, uint high)
              {
                      uint temp = 0, tmp = 0, num = 0;
                      TFT_SetWindow(x, y, x+wide-1, y+high-1);
                      num = wide * high * 2;
                      do
                      {  
                              temp = pic[tmp + 1];
                              temp = temp << 8;
                              temp = temp | pic[tmp];
                              TFT_WriteData(temp);//逐点显示
                              tmp += 2;
                      }
                      while(tmp < num);       
              }
              
              #endif
 514          
 515          
 516          
 517          
 518          
 519          
 520          
 521          
 522          
 523          
 524          
 525          
 526          
 527          
 528          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1696    ----
   CONSTANT SIZE    =   5695    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4     120
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
