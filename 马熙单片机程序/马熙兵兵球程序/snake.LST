C51 COMPILER V7.00  SNAKE                                                                  04/30/2010 19:20:04 PAGE 1   


C51 COMPILER V7.00, COMPILATION OF MODULE SNAKE
OBJECT MODULE PLACED IN snake.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE snake.c LARGE BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          /*********************************************************************
   2           *
   3           *                          贪吃蛇游戏核心程序
   4           *
   5           *********************************************************************
   6           * 文件名: snake.c
   7           * 描述: 贪吃蛇游戏核心程序
   8           * 公司: 爱晶电子
   9           * 作者                         日期                            注释
  10           *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  11           * 王伟民                               2010/3/20                               原始文件
  12           ********************************************************************/
  13          
  14          #include "stc.h"/*包含STC单片机头文件*/
  15          #include "top51.h"/*包含TOP51开发板头文件*/
  16          #include "key_sweep.h"
  17          #include "LCM/ILI9325.h"
  18          #include "GUI/gui.h"
  19          #include "snake.h"
  20          #include "delay.h"/*包含爱晶电子提供延时函数头文件*/
  21          
  22          //=================================================================
  23          //    使用结构体定义变量,使程序更加清楚
  24          //=================================================================
  25          struct 
  26          {
  27                  uchar X;        //食物位置
  28                  uchar Y;                         
  29                  uchar Yes;
  30          }Food;  //定义食物结构体
  31          
  32          
  33          struct 
  34          {
  35                  uchar X[SNAKE_MAX_LONG];
  36                  uchar Y[SNAKE_MAX_LONG];
  37                  uchar Long;                     //蛇的长度
  38                  uchar Life;                     //蛇的生命
  39                  uchar Score;                    //蛇的分数
  40                  uchar Level;                    //蛇的等级              
  41          }Snake; //定义蛇结构体
  42          
  43          uchar Key_V_temp=Key_Right;             //取出上次按键值
  44          uchar Over;             //=1表示本轮或全部优秀结束
  45          
  46          
  47          //=================================================================
  48          //函数名称：void Init_time(void)
  49          //函数功能：定时器0 : 控制蛇的运动速度
  50          //定时器1 : 用于产生随机数种子 ，用于放置食物
  51          //入口参数：无
  52          //出口参数：无
  53          //=================================================================
  54          void Init_time (void)
  55          {
C51 COMPILER V7.00  SNAKE                                                                  04/30/2010 19:20:04 PAGE 2   

  56   1              TMOD=0x11;/*设置定时器0、1为工作方式1*/
  57   1              TH0=0xb8;/*T0重新置初值*/
  58   1              TL0=0;
  59   1      //      TH1=0X00;/*T1重新置初值*/
  60   1      //      TL1=0X00;
  61   1              ET0=1;/*开定时器0中断*/
  62   1              //ET1=1;/*开定时器1中断*/
  63   1              EA=1;/*开总中断*/
  64   1              TR0=1;/*启动定时器0*/
  65   1              TR1=1;/*启动定时器1*/
  66   1      }
  67          
  68          /*---中断服务程序---*/
  69          void timer0(void) interrupt 1
  70          {
  71   1              unsigned int t;
  72   1              unsigned char a;
  73   1              TH0=0xb8;/*T0重新置初值*/
  74   1              TL0=0;
  75   1              a++;
  76   1              /*每次中断设计为0.01S*/
  77   1              /*修改下句可以调整游戏速度*/
  78   1              //t=120-Snake.Level*10;
  79   1      t=100;
  80   1              if (a>t)/*设定时间到了吗？*/
  81   1              //if (a>100)/*设定时间到了吗？*/
  82   1              {
  83   2                      a=0;/*是，时间到*/
  84   2                      COL0=0;P0=0;COL1=0;COL2=0;COL3=0;/*暂停键盘扫描，避免数码管上出现乱码显示*/
  85   2              Run_SNAKE();
  86   2                      P0=0;/*本句作用：在键盘扫描过程中禁止4位数码管显示，避免数码管上出现乱码显示*/
  87   2              }
  88   1      }
  89          
  90          
  91          //void timer1 (void) interrupt 3
  92          //{
  93          //      TH1=0X00;
  94          //      TL1=0X00;
  95          //}
  96          
  97          
  98          //=================================================================
  99          //函数名称：Trun_On_Point     Trun_Off_Point (uchar x,uchar y)
 100          //函数功能：点亮或者熄灭一个点。用于显示蛇身体
 101          //入口参数：无
 102          //出口参数：无
 103          //特别说明：此 Trun_On，函数换成其他的就可以兼容其他的液晶
 104          //          入8*8 点阵   12864 等
 105          //=================================================================
 106          void Trun_On_Point (uchar x,uint y,uint color)
 107          {
 108   1              GUI_box((8*(x+1)),(8*(y+1)),(8*(x+2)),(8*(y+2)),color);
 109   1      }
 110          
 111          void Trun_Off_Point (uchar x,uint y)
 112          {
 113   1              GUI_box((8*(x+1)),(8*(y+1)),(8*(x+2)),(8*(y+2)),0xBE5F);        
 114   1      }
 115          
 116          //=================================================================
 117          //函数名称：void Init_SNAKE(void)  
C51 COMPILER V7.00  SNAKE                                                                  04/30/2010 19:20:04 PAGE 3   

 118          //函数功能：绘制游戏界面，初始化游戏等级等参数
 119          //入口参数：无
 120          //出口参数：无
 121          //=================================================================
 122          void Init_SNAKE(void)   
 123          {
 124   1              uchar i;
 125   1      
 126   1              Init_time();
 127   1              
 128   1              //***********初始化蛇参数********************//
 129   1              Snake.Long=2;                           //定义初始化蛇的长度
 130   1              Snake.Life=0;                           //初始化蛇还活着
 131   1              Snake.Score=0;
 132   1              Food.Yes=1;                                     
 133   1              Key_Value=Key_Right;
 134   1              Over=0;
 135   1      
 136   1      
 137   1      
 138   1              for(i=0;i<Snake.Long;i++)               //将蛇给赋值
 139   1              {
 140   2                      Snake.X[i]=i+2;
 141   2                      Snake.Y[i]=2;
 142   2              }
 143   1              
 144   1              //***********绘制游戏界面********************//
 145   1         LCD_clearscreen(0xBE5F);//清屏
 146   1              GUI_box(0,304,239,319,0x001f);
 147   1              GUI_sprintf_HZ(32, 304, 0x07ff,0x001f);//显示预定义汉字字符串
 148   1              GUI_Rectangle(8-1,8-1,184+1,288+1,0xaa);//绘制一个矩形框, 0-127
 149   1              GUI_sprintf_String(192,8,"SCORE",0x8b00,0xBE5F);
 150   1              GUI_sprintf_chartodec(200,24,Snake.Score,0xf800,0xBE5F);
 151   1              GUI_sprintf_String(192,81,"LEVEL",0x8b00,0xBE5F);
 152   1              GUI_sprintf_chartodec(200,97,Snake.Level,0xf800,0xBE5F);
 153   1                                              
 154   1              for(i=0;i<Snake.Long;i++)               //将蛇给画出来
 155   1              {
 156   2                      Trun_On_Point(Snake.X[i],Snake.Y[i],0x001f);
 157   2              }                                                       
 158   1      }
 159          //=================================================================
 160          //函数名称：void Display_dead(uchar i) 
 161          //函数功能：显示死亡界面
 162          //入口参数：无
 163          //出口参数：无
 164          //=================================================================
 165          void Display_dead(void)
 166          {
 167   1              GUI_sprintf_String(60,140,"GAME OVER",0xcc88,0xBE5F); 
 168   1              Over=1;
 169   1              TR0=0;/*停止定时器0，蛇停止运动*/
 170   1              P0=0;/*本句作用：在键盘扫描过程中禁止4位数码管显示，避免数码管上出现乱码显示*/
 171   1      }
 172          //=================================================================
 173          //函数名称：void Display_Pass(uchar i)
 174          //函数功能：显示过关界面
 175          //入口参数：无
 176          //出口参数：无
 177          //=================================================================
 178          void Display_Pass(void)
 179          {
C51 COMPILER V7.00  SNAKE                                                                  04/30/2010 19:20:04 PAGE 4   

 180   1              Snake.Level++;  
 181   1              GUI_sprintf_String(68,124,"You are",0xcc88,0xBE5F); 
 182   1              GUI_sprintf_String(80,156,"WIN!",0xcc88,0xBE5F); 
 183   1              Over=1;
 184   1              TR0=0;/*停止定时器0，蛇停止运动*/
 185   1              P0=0;/*本句作用：在键盘扫描过程中禁止4位数码管显示，避免数码管上出现乱码显示*/
 186   1      }
 187          //=================================================================
 188          //函数名称：void Run_SNAKE(void)
 189          //函数功能：蛇运动函数 （游戏精华）
 190          //入口参数：无
 191          //出口参数：无
 192          //=================================================================
 193          void Run_SNAKE(void)
 194          {
 195   1              uchar i=0;
 196   1      
 197   1              /*********************根据按键选择蛇的运动方向*******************/
 198   1              if((Key_Value==Key_Right&&Key_V_temp!=Key_Left)||(Key_Value==Key_Left&&Key_V_temp==Key_Right))
 199   1              {
 200   2                      Trun_Off_Point(Snake.X[0],Snake.Y[0]);         //先把蛇尾给熄灭掉 
 201   2      
 202   2                      for(i=0;i<Snake.Long-1;i++)                    //蛇身都是它前一段的蛇身的位置
 203   2                      {
 204   3                              Snake.X[i]=Snake.X[i+1];
 205   3                              Snake.Y[i]=Snake.Y[i+1];
 206   3                      } 
 207   2      
 208   2                      Snake.X[Snake.Long-1]=Snake.X[Snake.Long-2]+1;
 209   2                      Snake.Y[Snake.Long-1]=Snake.Y[Snake.Long-2]+0; //蛇头向你要求的方向移动
 210   2                      
 211   2                      for(i=0;i<Snake.Long;i++)                                   //这个让蛇显示出来的函数
 212   2                      {
 213   3                              Trun_On_Point(Snake.X[i],Snake.Y[i],0x001f);
 214   3                      }
 215   2                      Key_V_temp=Key_Right;
 216   2              }
 217   1      
 218   1              if((Key_Value==Key_Left&&Key_V_temp!=Key_Right)||(Key_Value==Key_Right&&Key_V_temp==Key_Left))
 219   1              {
 220   2      
 221   2                      Trun_Off_Point(Snake.X[0],Snake.Y[0]);             //先把蛇尾给熄灭掉 
 222   2                      
 223   2                      for(i=0;i<Snake.Long-1;i++)                     //蛇身都是它前一段的蛇身的位置
 224   2                      {
 225   3                              Snake.X[i]=Snake.X[i+1];
 226   3                              Snake.Y[i]=Snake.Y[i+1];
 227   3                      } 
 228   2                      
 229   2                      Snake.X[Snake.Long-1]=Snake.X[Snake.Long-2]-1;
 230   2                      Snake.Y[Snake.Long-1]=Snake.Y[Snake.Long-2]+0; //蛇头向你要求的方向移动
 231   2                      
 232   2                      for(i=0;i<Snake.Long;i++)                                   //这个让蛇显示出来的函数
 233   2                      {
 234   3                              Trun_On_Point(Snake.X[i],Snake.Y[i],0x001f);
 235   3                      }
 236   2                      Key_V_temp=Key_Left;
 237   2              }
 238   1              if(( Key_Value==Key_Up&&Key_V_temp!=Key_Down)||( Key_Value==Key_Down&&Key_V_temp==Key_Up))
 239   1              {
 240   2                      Trun_Off_Point(Snake.X[0],Snake.Y[0]);            //先把蛇尾给熄灭掉 
 241   2                      
C51 COMPILER V7.00  SNAKE                                                                  04/30/2010 19:20:04 PAGE 5   

 242   2                      for(i=0;i<Snake.Long-1;i++)                   //蛇身都是它前一段的蛇身的位置
 243   2                      {
 244   3                              Snake.X[i]=Snake.X[i+1];
 245   3                              Snake.Y[i]=Snake.Y[i+1];
 246   3                      } 
 247   2                      
 248   2                      Snake.X[Snake.Long-1]=Snake.X[Snake.Long-2]+0;
 249   2                      Snake.Y[Snake.Long-1]=Snake.Y[Snake.Long-2]-1; //蛇头向你要求的方向移动
 250   2                      
 251   2                      for(i=0;i<Snake.Long;i++)                                  //这个让蛇显示出来的函数
 252   2                      {
 253   3                              Trun_On_Point(Snake.X[i],Snake.Y[i],0x001f);
 254   3                      }
 255   2                      Key_V_temp=Key_Up;
 256   2              }
 257   1              if(( Key_Value==Key_Down&&Key_V_temp!=Key_Up)||( Key_Value==Key_Up&&Key_V_temp==Key_Down))
 258   1              {
 259   2                      Trun_Off_Point(Snake.X[0],Snake.Y[0]);           //先把蛇尾给熄灭掉 
 260   2                      
 261   2                      for(i=0;i<Snake.Long-1;i++)                  //蛇身都是它前一段的蛇身的位置
 262   2                      {
 263   3                              Snake.X[i]=Snake.X[i+1];
 264   3                              Snake.Y[i]=Snake.Y[i+1];
 265   3                      } 
 266   2                      
 267   2                      Snake.X[Snake.Long-1]=Snake.X[Snake.Long-2]+0;
 268   2                      Snake.Y[Snake.Long-1]=Snake.Y[Snake.Long-2]+1; //蛇头向你要求的方向移动
 269   2                      
 270   2                      for(i=0;i<Snake.Long;i++)                                  //这个让蛇显示出来的函数
 271   2                      {
 272   3                              Trun_On_Point(Snake.X[i],Snake.Y[i],0x001f);
 273   3                      }
 274   2                      Key_V_temp=Key_Down;
 275   2              }
 276   1              
 277   1      
 278   1              /****************根据按键选择蛇的运动程序结束*******************/
 279   1              /////////////////////////////////////////////////////////////////
 280   1      
 281   1              
 282   1              /************************判断蛇是否死亡***********************/
 283   1              if(Snake.X[Snake.Long-1]>=22||Snake.Y[Snake.Long-1]>=35)//判蛇头是否撞到墙壁
 284   1              {
 285   2                      Snake.Life=1;
 286   2              }
 287   1              for(i=3;i<Snake.Long;i++)//从第三节开始判断蛇头是否咬到自己
 288   1              {
 289   2                      if(Snake.X[i]==Snake.X[0]&&Snake.Y[i]==Snake.Y[0])
 290   2                      {
 291   3                              Snake.Life=1;
 292   3                      }
 293   2              }
 294   1              if(Snake.Life==1)         //if the snake over
 295   1              {
 296   2                      Key_V_temp=Key_Value;
 297   2                      Display_dead();
 298   2              }
 299   1              /******************判断蛇是否死亡程序结束***********************/
 300   1              /////////////////////////////////////////////////////////////////
 301   1      
 302   1      
 303   1              /************************判断蛇是否最长了**********************/
C51 COMPILER V7.00  SNAKE                                                                  04/30/2010 19:20:04 PAGE 6   

 304   1              if(Snake.Long==SNAKE_MAX_LONG)
 305   1              {
 306   2                      Key_V_temp=Key_Value;
 307   2                      Display_Pass();
 308   2              }
 309   1              /////////////////////////////////////////////////////////////////                                                                                  
 310   1      
 311   1              /*************************判蛇是否吃到食物**********************/               
 312   1              if(Snake.X[Snake.Long-1]==Food.X&&Snake.Y[Snake.Long-1]==Food.Y)//
 313   1              {
 314   2                      //Trun_Off_Point(Food.X,Food.Y);                 //消隐食物
 315   2                      Snake.Long++;//蛇节数加1
 316   2                      Snake.X[Snake.Long-1]=Food.X;
 317   2                      Snake.Y[Snake.Long-1]=Food.Y;
 318   2                      Snake.Score+=10;
 319   2                      GUI_sprintf_chartodec(200,24,Snake.Score,0xcc88,0xBE5F);
 320   2                      Food.Yes=1;  //食物标志置1
 321   2              }
 322   1              /////////////////////////////////////////////////////////////////
 323   1              
 324   1      
 325   1              /***************************放果子程序*************************/
 326   1              if(Food.Yes==0)
 327   1              {
 328   2                      Trun_On_Point(Food.X,Food.Y,0xf81f);
 329   2              }                                                                                          
 330   1              if(Food.Yes==1)
 331   1              {
 332   2                      while(1)
 333   2                      {
 334   3                              Food.X=TL1/12;                          //获得随机数
 335   3                              if (Food.X>21)Food.Y=Food.Y-21;
 336   3                              Food.Y=TL1/7;
 337   3                              if (Food.Y>34)Food.Y=Food.Y-34;
 338   3      
 339   3                          for(i=0;i<Snake.Long;i++)                           //判断产生的食物坐标是否和蛇身重合
 340   3                              {
 341   4                                      if((Food.X==Snake.X[i])&&(Food.X==Snake.Y[i]))
 342   4                                              break;
 343   4                              }
 344   3                              if(i==Snake.Long)
 345   3                              {
 346   4                                      Food.Yes=0;
 347   4                                      break;                                                          //产生有效的食物坐标
 348   4                              }
 349   3                      }
 350   2              }
 351   1      }
 352          
 353          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2064    ----
   CONSTANT SIZE    =     35    ----
   XDATA SIZE       =     49       7
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
