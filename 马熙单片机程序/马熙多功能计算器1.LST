C51 COMPILER V9.01   _砦醵喙δ_计算器1                                                     02/05/2015 18:12:43 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE _砦醵喙δ_计算器1
OBJECT MODULE PLACED IN 马熙多功能计算器1.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE 马熙多功能计算器1.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1           
   2          
   3          #include "delay.h"
   4          void delay_us(unsigned int cnt)     
   5          { 
   6   1                   while(--cnt);
   7   1      }
   8          void delay_ms(unsigned int cnt) 
   9          { 
  10   1                  unsigned int i, j; 
  11   1                  for (i = 0; i < cnt; i++) 
  12   1                  {
  13   2                          for (j = 0;j < 65; j++) 
  14   2                          {   
  15   3                                  delay_us(1);  
  16   3                          } 
  17   2                  }
  18   1      }
  19           
  20          
  21          
  22          #include "includes.h"
  23          sbit RS = P2^6;            //定义端口  数据命令选择H/L
  24          sbit RW = P2^5;         //读写 H/L
  25          sbit EN = P2^7;         //使能
  26          extern unsigned char sk;
  27          #define RS_CLR RS=0 
  28          #define RS_SET RS=1
  29          #define RW_CLR RW=0 
  30          #define RW_SET RW=1 
  31          #define EN_CLR EN=0
  32          #define EN_SET EN=1
  33          /******************************************************************/
  34          /*                   写入命令函数                                 */
  35          /******************************************************************/
  36          void LCD_write_com(unsigned char com) 
  37          {  
  38   1              RS_CLR; 
  39   1              RW_CLR; 
  40   1              EN_SET; 
  41   1              P0 = com; 
  42   1              delay_us(5); 
  43   1              EN_CLR;
  44   1      }
  45          /******************************************************************/
  46          /*                   写入数据函数                                 */
  47          /******************************************************************/
  48          void LCD_write_Data(unsigned char Data) 
  49          { 
  50   1              RS_SET; 
  51   1              RW_CLR; 
  52   1              EN_SET; 
  53   1              P0 = Data; 
  54   1              delay_us(5); 
  55   1              EN_CLR;
C51 COMPILER V9.01   _砦醵喙δ_计算器1                                                     02/05/2015 18:12:43 PAGE 2   

  56   1      }
  57          /******************************************************************/
  58          /*                   清屏函数                                     */
  59          /******************************************************************/
  60          void LCD_clear(void) 
  61          { 
  62   1              LCD_write_com(0x01);
  63   1              delay_ms(5);
  64   1               if(sk == 1)
  65   1              {
  66   2                  LCD_write_char(0,1,0xde);
  67   2                      LCD_write_com(0x80); 
  68   2              }
  69   1              else
  70   1              {
  71   2                      LCD_write_char(0,1,0x20);
  72   2                  LCD_write_com(0x80);
  73   2              } 
  74   1      }
  75          /******************************************************************/
  76          /*                   写入字符串函数                               */
  77          /******************************************************************/
  78          void LCD_write_str(unsigned char x,unsigned char y,unsigned char *s) 
  79          { 
  80   1              unsigned char i,j;    
  81   1              if (y == 0) 
  82   1              {     
  83   2                      LCD_write_com(0x80 + x);     
  84   2              }
  85   1              else 
  86   1              {     
  87   2                      LCD_write_com(0xC0 + x);     
  88   2              }
  89   1              for(i=4;i>0;i--)
  90   1              {
  91   2                      if(s[14] == '0' || s[14] == '.')
  92   2                      {
  93   3                          for(j=14;j>1;j--)
  94   3                              {
  95   4                                      s[j] = s[j-1];
  96   4                              }
  97   3                      }       
  98   2                      else break;
  99   2              }       
 100   1              while (*s)                              
 101   1              {     
 102   2                      LCD_write_Data(*s);     
 103   2                      s++;     
 104   2              }
 105   1      }
 106          /******************************************************************/
 107          /*                   写入字节函数                                 */
 108          /******************************************************************/
 109          void LCD_write_char(unsigned char x,unsigned char y,unsigned char Data) 
 110          {     
 111   1              if (y == 0) 
 112   1              {     
 113   2                      LCD_write_com(0x80 + x);     
 114   2              }    
 115   1              else 
 116   1              {     
 117   2                      LCD_write_com(0xC0 + x);     
C51 COMPILER V9.01   _砦醵喙δ_计算器1                                                     02/05/2015 18:12:43 PAGE 3   

 118   2              }        
 119   1              LCD_write_Data(Data);  
 120   1      }
 121          /******************************************************************/
 122          /*                   初始化函数                                   */
 123          /******************************************************************/
 124          void LCD_init(void) 
 125          {
 126   1              LCD_write_com(0x38);    /*显示模式设置*/ 
 127   1              delay_ms(5); 
 128   1              LCD_write_com(0x38); 
 129   1              delay_ms(5); 
 130   1              LCD_write_com(0x38); 
 131   1              delay_ms(5); 
 132   1              LCD_write_com(0x38);  
 133   1              LCD_write_com(0x08);    /*显示关闭*/ 
 134   1              LCD_write_com(0x01);    /*显示清屏*/ 
 135   1              LCD_write_com(0x06);    /*显示光标移动设置*/ 
 136   1              delay_ms(5); 
 137   1              LCD_write_com(0x0C);    /*显示开及光标设置*/
 138   1      }
 139          
 140          #include "includes.h"
 141          extern unsigned char sk;
 142          sbit key0=P2^0;
 143          sbit key1=P2^1;                          
 144          sbit key2=P2^2;
 145          sbit key3=P2^3;
 146          sbit speak=P2^4;
 147          unsigned char KeyProcess(void)
 148          {
 149   1      unsigned char key;
 150   1              unsigned char keyvalue = 16;
 151   1              key=keyscan();                                     //调用键盘扫描                  
 152   1              switch(key)
 153   1                  {                           
 154   2                          case 0xee:keyvalue = 0;break;  //0 按下相应的键显示相对应的码值
 155   2                          case 0xde:keyvalue = 1;break;  //1 按下相应的键显示相对应的码值 
 156   2                          case 0xbe:keyvalue = 2;break;  //2
 157   2                          case 0x7e:keyvalue = 3;break;  //3
 158   2                          case 0xed:keyvalue = 5;break;  //4
 159   2                          case 0xdd:keyvalue = 6;break;  //5
 160   2                          case 0xbd:keyvalue = 7;break;  //6
 161   2                          case 0x7d:keyvalue = 8;break;  //7
 162   2                          case 0xeb:keyvalue = 10;break;  //8
 163   2                          case 0xdb:keyvalue = 11;break;  //9
 164   2                          case 0xbb:keyvalue = 12;break; //10
 165   2                          case 0x7b:keyvalue = 13;break; //11
 166   2                          case 0xe7:keyvalue = 15;break; //12
 167   2                          case 0xd7:keyvalue = 16;break; //13
 168   2                          case 0xb7:keyvalue = 17;break; //14
 169   2                          case 0x77:keyvalue = 18;break; //15
 170   2                          case 0x00:keyvalue = 4;break; //key0
 171   2                          case 0x01:keyvalue = 9;break; //key1
 172   2                          case 0x02:keyvalue = 14;break; //key2
 173   2                          case 0x03:keyvalue = 19;break; //key3
 174   2                          case 0xff:keyvalue = 20;break;
 175   2                          default: keyvalue = 20;break;
 176   2               }      
 177   1              return keyvalue;
 178   1      }
 179          unsigned char keyscan(void)           //键盘扫描函数，使用行列反转扫描法
C51 COMPILER V9.01   _砦醵喙δ_计算器1                                                     02/05/2015 18:12:43 PAGE 4   

 180          {
 181   1              unsigned char cord_h,cord_l;      //行列值中间变量
 182   1              P3=0x0f;                          //行线输出全为1,列线输出全为0
 183   1              cord_h=P3&0x0f;                   //读入行线值
 184   1              if(cord_h!=0x0f)                    //先检测有无按键按下
 185   1              {
 186   2                      delay_us(100);                  //去抖
 187   2                      if(cord_h!=0x0f)
 188   2                      {
 189   3                              cord_h=P3&0x0f;           //读入行线值
 190   3                              P3=cord_h|0xf0;            //输出当前行线值
 191   3                              cord_l=P3&0xf0;           //读入列线值          
 192   3                              while(P3 != 0x0f)
 193   3                              {
 194   4                                      P3 = 0x0f;
 195   4                                      speak = !sk;
 196   4                              }
 197   3                              speak=0;
 198   3                              delay_ms(20);                   
 199   3                              return(cord_h+cord_l);       //键盘最后组合码值
 200   3                      }
 201   2              }
 202   1              if(key0 == 0)
 203   1              {
 204   2                  delay_us(100);
 205   2                      if(key0==0)
 206   2                      {
 207   3                              while(key0 == 0)
 208   3                              {
 209   4                                      speak = !sk;
 210   4                              }
 211   3                              speak = 0;
 212   3                              delay_ms(3);
 213   3                              return 0x00;
 214   3                      }       
 215   2              }
 216   1              if(key1 == 0)
 217   1              {
 218   2                  delay_us(100);
 219   2                      if(key1==0)
 220   2                      {
 221   3                              while(key1 == 0)
 222   3                              {
 223   4                                      speak = !sk;
 224   4                              }
 225   3                              speak = 0;
 226   3                              delay_ms(3);
 227   3                              return 0x01;
 228   3                      }       
 229   2              }
 230   1              if(key2 == 0)
 231   1              {
 232   2                  delay_us(100);
 233   2                      if(key2==0)
 234   2                      {
 235   3                              while(key2 == 0)
 236   3                              {
 237   4                                      speak = !sk;
 238   4                              }
 239   3                              speak = 0;
 240   3                              delay_ms(3);
 241   3                              return 0x02;
C51 COMPILER V9.01   _砦醵喙δ_计算器1                                                     02/05/2015 18:12:43 PAGE 5   

 242   3                      }       
 243   2              }
 244   1              if(key3 == 0)
 245   1              {
 246   2                  delay_us(100);
 247   2                      if(key3==0)
 248   2                      {
 249   3                              while(key3 == 0)
 250   3                              {
 251   4                                      speak = !sk;
 252   4                              }
 253   3                              speak = 0;
 254   3                              delay_ms(3);
 255   3                              return 0x03;
 256   3                          }   
 257   2      }
 258   1                  return(0xff);                       //返回该值
 259   1      }
 260          
 261          
 262          #include "includes.h"
 263          unsigned char code yxj[7][7] = {
 264                                          // + - * / ( ) #
 265                      2,2,0,0,0,2,2,  // +
 266                      2,2,0,0,0,2,2,  // -
 267                                      2,2,2,2,0,2,2,  // *
 268                                          2,2,2,2,0,2,2,  // /
 269                                      0,0,0,0,0,1,3,  // (
 270                                      2,2,2,2,3,2,2,  // )
 271                                      0,0,0,0,0,3,1,  // #
 272          };
 273          void Init_OPTR(OPTR *s,char *TR1)
 274          {
 275   1          s->rbase = TR1;
 276   1              s->rtop = s->rbase;
 277   1      }
 278          
 279          void PUSH_OPTR(OPTR *s,char elem)
 280          {
 281   1              * (s->rtop) = elem;
 282   1      s->rtop ++;
 283   1      }
 284          char POP_OPTR(OPTR *s)
 285          {
 286   1              char temp;
 287   1              s->rtop--;
 288   1              temp= *(s->rtop);
 289   1                  return temp;
 290   1      }
 291          void Init_OPND(OPND *s,double *ND1)
 292          {
 293   1          s->dbase = ND1;
 294   1              s->dtop = s->dbase;
 295   1      }
 296          void PUSH_OPND(OPND *s,double elem)
 297          {
 298   1              * (s->dtop) = elem;
 299   1                  s->dtop ++;
 300   1      }
 301          double POP_OPND(OPND *s)
 302          {
 303   1              double temp;
C51 COMPILER V9.01   _砦醵喙δ_计算器1                                                     02/05/2015 18:12:43 PAGE 6   

 304   1              s->dtop--;
 305   1              temp= *(s->dtop);
 306   1              return temp;
 307   1      }
 308          char Precede(char a,char b)
 309          {
 310   1              char i,j;
 311   1              switch(a)
 312   1              {
 313   2                          case '+':i=0;break;
 314   2                          case '-':i=1;break;
 315   2                          case '*':i=2;break;
 316   2                          case '/':i=3;break;
 317   2                          case '(':i=4;break;
 318   2                          case ')':i=5;break;
 319   2                          case '#':i=6;break;
 320   2                          default :i=0;break;
 321   2              }
 322   1          switch(b)
 323   1              {
 324   2                          case '+':j=0;break;
 325   2                          case '-':j=1;break;
 326   2                          case '*':j=2;break;
 327   2                          case '/':j=3;break;
 328   2                          case '(':j=4;break;
 329   2                          case ')':j=5;break;
 330   2                          case '#':j=6;break;
 331   2                          default :j=0;break;
 332   2              }
 333   1              return yxj[i][j];
 334   1      }
 335          
 336          double Operate(double num1,char theta,double num2)
 337          {
 338   1          double num3;
 339   1          switch(theta)
 340   1              {
 341   2                          case '+':num3 = num1 + num2;break;
 342   2                          case '-':num3 = num1 - num2;break;
 343   2                          case '*':num3 = num1 * num2;break;
 344   2                          case '/':num3 = num1 / num2;break; 
 345   2              }
 346   1              return num3;
 347   1      }
 348          void Pushnum(OPND *sq,double c)
 349          {
 350   1          double temp1,temp2;
 351   1          temp1 = POP_OPND(sq);
 352   1          temp2 = temp1 * 10 + c;
 353   1              PUSH_OPND(sq,temp2);
 354   1      }
 355          void Pushdp(OPND *sq,char flag,double c)
 356          {
 357   1          double temp3,temp4;
 358   1                  char i;
 359   1          double j = 1;
 360   1          for(i=0;i<flag;i++)
 361   1              {
 362   2                          j = j * 0.1;
 363   2              }
 364   1          temp3 = POP_OPND(sq);
 365   1          temp4 = temp3  + c * j;
C51 COMPILER V9.01   _砦醵喙δ_计算器1                                                     02/05/2015 18:12:43 PAGE 7   

 366   1              PUSH_OPND(sq,temp4);
 367   1      }
 368          
 369          #include "includes.h"
 370          
 371          unsigned char code uckey[20] = {0x37,0x38,0x39,0x28,0x29,
 372                                     0x34,0x35,0x36,0x2b,0x2d,
 373                                                             0x31,0x32,0x33,0x2a,0x2f,
 374                                                             0x30,0x2e,0x64,0xde,0x3d};
 375          
 376          char idata TR[20];
 377          double idata ND[20];
 378          void dispdouble(double value);
 379          double AccProcess(char *s);
 380          char getonechar(void);
 381          unsigned char keycount=0;
 382          unsigned char sk=0;
 383          void ErrorProcess(void);
 384          void main(void) 
 385          {
 386   1              double value;
 387   1              unsigned char keyvalue;
 388   1              unsigned char ipos = 0;
 389   1              char s[32];
 390   1              P2 = 0xff;
 391   1              delay_ms(100);
 392   1              LCD_init();
 393   1              LCD_clear();
 394   1              while(1)
 395   1          {
 396   2                      while(1)
 397   2                      {
 398   3                              keyvalue = getonechar();
 399   3                              if(uckey[keyvalue] ==  '=')
 400   3                              {
 401   4                                      s[ipos++] = '#';
 402   4                                      break;
 403   4                              }
 404   3                              else 
 405   3                              {
 406   4                                      if(uckey[keyvalue] == 'd')                //表示按下退格键
 407   4                                      {
 408   5                                          s[--ipos] = '0';
 409   5                                      }
 410   4      
 411   4                                      else if(uckey[keyvalue] == 0xde)           //表示按下声音控制键
 412   4                                      {
 413   5                                          sk = !sk;
 414   5                                          keycount--;
 415   5                                              if(sk == 1)
 416   5                                              {
 417   6                                                  LCD_write_char(0,1,0xde);
 418   6                                                      LCD_write_com(0x80 + keycount); 
 419   6                                              }
 420   5                                              else
 421   5                                              {
 422   6                                                      LCD_write_char(0,1,0x20);
 423   6                                                  LCD_write_com(0x80 + keycount);
 424   6                                              } 
 425   5                                      }                               
 426   4                                      else
 427   4                                      {
C51 COMPILER V9.01   _砦醵喙δ_计算器1                                                     02/05/2015 18:12:43 PAGE 8   

 428   5                                              s[ipos++] = uckey[keyvalue];
 429   5                                      }            
 430   4                              }
 431   3                      }
 432   2                      while(keycount >= 16)
 433   2                  {
 434   3                              LCD_write_com(0x1c);
 435   3                              delay_ms(5);
 436   3                              keycount--;
 437   3                  }
 438   2                      s[ipos] = '\0';
 439   2                      ipos = 0;
 440   2                      keycount = 0;
 441   2              value =  AccProcess(s);
 442   2              dispdouble(value);
 443   2              }  
 444   1      }
 445          void dispdouble(double value)
 446          {
 447   1              char text[15];          
 448   1          sprintf(text,"%15.3f",value);
 449   1          LCD_write_str(1,1,text); 
 450   1      }
 451          
 452          double AccProcess(char *s)
 453          {
 454   1              OPTR str;           //符号栈
 455   1              OPND snd;           //数据栈
 456   1          char flagnum = 0;
 457   1              char flagdp = 0;
 458   1          char i=0;
 459   1              char c,theta;
 460   1              double num1,num2,num;
 461   1              Init_OPND(&snd,&ND[0]);
 462   1              Init_OPTR(&str,&TR[0]);
 463   1              PUSH_OPTR(&str,'#');
 464   1              flagnum = 0;
 465   1          c = *(s++);                                      
 466   1       while(c!='#' || (*(str.rtop-1) != '#'))
 467   1              {
 468   2                      if(c>='0' && c<= '9')  
 469   2                       {                                                                            
 470   3                              c = c - 0x30;
 471   3                              if(flagdp ==0)
 472   3                              {
 473   4                                      if(flagnum ==0)
 474   4                                      {
 475   5                                              PUSH_OPND(&snd,(double)c); 
 476   5                                              flagnum++;  
 477   5                                      }
 478   4                      else
 479   4                                      {
 480   5                                              Pushnum(&snd,c);
 481   5                                              flagnum++;                              
 482   5                                      }                                                              
 483   4                              }
 484   3                              if(flagdp == 1)
 485   3                              {                                       
 486   4                                      Pushdp(&snd,flagnum,c);
 487   4                                      flagnum++;                                                              
 488   4                              }
 489   3                              c=*(s++);
C51 COMPILER V9.01   _砦醵喙δ_计算器1                                                     02/05/2015 18:12:43 PAGE 9   

 490   3                      }
 491   2                      else if(c=='.')
 492   2                      {
 493   3                  flagdp = 1;
 494   3                              if(flagnum ==0 )
 495   3                              {
 496   4                                        PUSH_OPND(&snd,0x00);
 497   4                              }
 498   3                              flagnum = 1;
 499   3                              c=*(s++);
 500   3                      }
 501   2                      else 
 502   2                      switch(Precede(*(str.rtop-1),c))
 503   2                          {                                                                                                                   case 0:
             -   if(flagnum == 0 && c != '(') ErrorProcess();       
 504   3                                          PUSH_OPTR(&str,c);c=*(s++);          
 505   3                              flagnum = 0;
 506   3                                          flagdp = 0;                                    
 507   3                                          break;                           
 508   3      case 1:   POP_OPTR(&str);c=*(s++);                                                               break;      
 509   3                              case 2:    theta = POP_OPTR(&str);                                  
 510   3                                               num2 = POP_OPND(&snd);                                                     
 511   3                               num1 = POP_OPND(&snd);                             
 512   3                           num =  (double)(Operate(num1,theta,num2));
 513   3                                           PUSH_OPND(&snd,num);                   
 514   3                                           break;                                              
 515   3                          case 3:   ErrorProcess(); break;
 516   3                                          default:break;
 517   3                              }
 518   2              }
 519   1              while(*s)
 520   1              {
 521   2                      *s = '\0';                           //清空存放表达式的数组
 522   2                      s++;
 523   2              }
 524   1              return (*(snd.dtop - 1));
 525   1              
 526   1      }
 527          char getonechar()
 528          {
 529   1              unsigned char key1 = 20;
 530   1              keycount++;
 531   1              while(key1 == 20)
 532   1              {
 533   2                      key1 =  KeyProcess();
 534   2                      if(keycount==1 && key1==17)
 535   2                      {
 536   3                              key1=20;
 537   3                      }
 538   2              }
 539   1              if(keycount == 1) 
 540   1              {
 541   2                      LCD_clear();
 542   2              }
 543   1              if(keycount >= 16)
 544   1              {
 545   2                      LCD_write_com(0x18);    //内容左移
 546   2              }
 547   1          if(keycount == 33)
 548   1              {
 549   2                      ErrorProcess(); 
 550   2              }
C51 COMPILER V9.01   _砦醵喙δ_计算器1                                                     02/05/2015 18:12:43 PAGE 10  

 551   1              if(key1 == 17)
 552   1              {
 553   2                      LCD_write_char(keycount-2,0,0x20);
 554   2                      delay_ms(2);
 555   2                  LCD_write_com(0x80+keycount-2);     
 556   2                      keycount -= 2;                  
 557   2              }
 558   1              else if(key1 == 18)
 559   1              {;}     
 560   1              else 
 561   1              {
 562   2                  LCD_write_Data(uckey[key1]);
 563   2              }
 564   1              return key1;    
 565   1      }
 566          void ErrorProcess(void)
 567          { 
 568   1              LCD_clear();
 569   1              LCD_write_str(4,1,"ERROR!");
 570   1              LCD_write_char(10,1,'!');
 571   1              while(KeyProcess() == 20);    
 572   1              ISP_CONTR = 0x20;                   //软件复位
 573   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2233    ----
   CONSTANT SIZE    =     83    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2     156
   IDATA SIZE       =    100    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
